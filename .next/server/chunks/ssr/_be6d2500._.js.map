{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/page/checkout/AddressForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { MapPin, Phone, Home } from \"lucide-react\";\n\ninterface AddressFormProps {\n  onSubmit: (address: any) => void;\n}\n\nexport function AddressForm({ onSubmit }: AddressFormProps) {\n  const [formData, setFormData] = useState({\n    type: \"SHIPPING\",\n    label: \"\",\n    line1: \"\",\n    line2: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\",\n    country: \"NP\",\n    phone: \"\",\n    isDefault: false\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: \"\" }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.line1.trim()) newErrors.line1 = \"Line 1 is required\";\n    if (!formData.city.trim()) newErrors.city = \"City is required\";\n    if (!formData.state.trim()) newErrors.state = \"Province is required\";\n    if (!formData.postalCode.trim()) newErrors.postalCode = \"Postal code is required\";\n    if (!formData.country.trim()) newErrors.country = \"Country is required\";\n    if (!formData.phone.trim()) newErrors.phone = \"Phone number is required\";\n\n    // Validate phone number format (Nepal format, e.g., 10 digits starting with 98)\n    const phoneRegex = /^98\\d{8}$/;\n    if (formData.phone && !phoneRegex.test(formData.phone)) {\n      newErrors.phone = \"Please enter a valid 10-digit Nepal phone number (e.g., 9812345678)\";\n    }\n\n    // Validate postal code format (Nepal format, 5 digits)\n    const postalRegex = /^\\d{5}$/;\n    if (formData.postalCode && !postalRegex.test(formData.postalCode)) {\n      newErrors.postalCode = \"Please enter a valid 5-digit postal code\";\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {/* Address Information */}\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n          <MapPin className=\"w-5 h-5\" />\n          Address Details\n        </h3>\n\n        <div className=\"grid grid-cols-1 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Label (Optional)\n            </label>\n            <Input\n              type=\"text\"\n              value={formData.label}\n              onChange={(e) => handleInputChange(\"label\", e.target.value)}\n              placeholder=\"e.g. Home, Office\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Line 1 *\n            </label>\n            <Input\n              type=\"text\"\n              value={formData.line1}\n              onChange={(e) => handleInputChange(\"line1\", e.target.value)}\n              placeholder=\"House number, street name, area\"\n              className={errors.line1 ? \"border-red-500\" : \"\"}\n            />\n            {errors.line1 && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.line1}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Line 2 (Optional)\n            </label>\n            <Input\n              type=\"text\"\n              value={formData.line2}\n              onChange={(e) => handleInputChange(\"line2\", e.target.value)}\n              placeholder=\"Apartment, suite, landmark\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                City *\n              </label>\n              <Input\n                type=\"text\"\n                value={formData.city}\n                onChange={(e) => handleInputChange(\"city\", e.target.value)}\n                placeholder=\"City\"\n                className={errors.city ? \"border-red-500\" : \"\"}\n              />\n              {errors.city && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.city}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Province *\n              </label>\n              <select\n                value={formData.state}\n                onChange={(e) => handleInputChange(\"state\", e.target.value)}\n                className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n                  errors.state ? \"border-red-500\" : \"\"\n                }`}\n              >\n                <option value=\"\">Select Province</option>\n                <option value=\"Koshi Province\">Koshi Province</option>\n                <option value=\"Madhesh Province\">Madhesh Province</option>\n                <option value=\"Bagmati Province\">Bagmati Province</option>\n                <option value=\"Gandaki Province\">Gandaki Province</option>\n                <option value=\"Lumbini Province\">Lumbini Province</option>\n                <option value=\"Karnali Province\">Karnali Province</option>\n                <option value=\"Sudurpashchim Province\">Sudurpashchim Province</option>\n              </select>\n              {errors.state && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.state}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Postal Code *\n              </label>\n              <Input\n                type=\"text\"\n                value={formData.postalCode}\n                onChange={(e) => handleInputChange(\"postalCode\", e.target.value)}\n                placeholder=\"44600\"\n                className={errors.postalCode ? \"border-red-500\" : \"\"}\n                maxLength={5}\n              />\n              {errors.postalCode && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.postalCode}</p>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Country *\n            </label>\n            <Input\n              type=\"text\"\n              value={formData.country}\n              onChange={(e) => handleInputChange(\"country\", e.target.value)}\n              placeholder=\"NP\"\n              className={errors.country ? \"border-red-500\" : \"\"}\n            />\n            {errors.country && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.country}</p>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">\n              Phone Number *\n            </label>\n            <div className=\"flex\">\n              <span className=\"inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border border-r-0 border-gray-300 rounded-l-md\">\n                +977\n              </span>\n              <Input\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                placeholder=\"9812345678\"\n                className={`rounded-l-none ${errors.phone ? \"border-red-500\" : \"\"}`}\n                maxLength={10}\n              />\n            </div>\n            {errors.phone && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Address Type */}\n      {/* <div>\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n          <Home className=\"w-5 h-5\" />\n          Address Type\n        </h3>\n\n        <div className=\"flex gap-4 flex-wrap\">\n          {[\"SHIPPING\", \"BILLING\", \"BUSINESS\", \"WAREHOUSE\"].map((type) => (\n            <label key={type} className=\"flex items-center cursor-pointer\">\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value={type}\n                checked={formData.type === type}\n                onChange={(e) => handleInputChange(\"type\", e.target.value)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm font-medium\">\n                {type.charAt(0) + type.slice(1).toLowerCase()}\n              </span>\n            </label>\n          ))}\n        </div>\n      </div> */}\n\n      {/* Set as Default */}\n      <div>\n        <label className=\"flex items-center cursor-pointer\">\n          <input\n            type=\"checkbox\"\n            checked={formData.isDefault}\n            onChange={(e) => setFormData((prev) => ({ ...prev, isDefault: e.target.checked }))}\n            className=\"mr-2\"\n          />\n          <span className=\"text-sm font-medium\">Set as default address</span>\n        </label>\n      </div>\n\n      {/* Submit Button */}\n      <Button type=\"submit\" size=\"lg\" className=\"w-full\">\n        Save Address\n      </Button>\n    </form>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 616, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/page/checkout/PaymentMethodSelector.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  CreditCard, \n  Smartphone, \n  Building2, \n  Wallet, \n  Banknote,\n  Check\n} from \"lucide-react\";\n\ninterface PaymentMethod {\n  id: string;\n  type: string;\n  name: string;\n  icon: any;\n  description: string;\n  isPopular?: boolean;\n  providers?: string[];\n}\n\ninterface PaymentMethodSelectorProps {\n  onSelect: (method: PaymentMethod) => void;\n  selected: PaymentMethod | null;\n}\n\nconst paymentMethods: PaymentMethod[] = [\n  {\n    id: \"upi\",\n    type: \"UPI\",\n    name: \"UPI\",\n    icon: Smartphone,\n    description: \"Pay using UPI apps like Google Pay, PhonePe, Paytm\",\n    isPopular: true,\n    providers: [\"Google Pay\", \"PhonePe\", \"Paytm\", \"BHIM\", \"Amazon Pay\"]\n  },\n  {\n    id: \"credit_card\",\n    type: \"CREDIT_CARD\",\n    name: \"Credit Card\",\n    icon: CreditCard,\n    description: \"Visa, MasterCard, American Express, RuPay\",\n    providers: [\"Visa\", \"MasterCard\", \"American Express\", \"RuPay\"]\n  },\n  {\n    id: \"debit_card\",\n    type: \"DEBIT_CARD\", \n    name: \"Debit Card\",\n    icon: CreditCard,\n    description: \"All major debit cards accepted\",\n    providers: [\"Visa\", \"MasterCard\", \"RuPay\", \"Maestro\"]\n  },\n  {\n    id: \"net_banking\",\n    type: \"NET_BANKING\",\n    name: \"Net Banking\",\n    icon: Building2,\n    description: \"All major banks supported\",\n    providers: [\"SBI\", \"HDFC\", \"ICICI\", \"Axis\", \"Kotak\", \"PNB\"]\n  },\n  {\n    id: \"wallet\",\n    type: \"WALLET\",\n    name: \"Digital Wallet\",\n    icon: Wallet,\n    description: \"Paytm, Mobikwik, Freecharge, Amazon Pay\",\n    providers: [\"Paytm\", \"Mobikwik\", \"Freecharge\", \"Amazon Pay\", \"Ola Money\"]\n  },\n  {\n    id: \"cod\",\n    type: \"CASH_ON_DELIVERY\",\n    name: \"Cash on Delivery\",\n    icon: Banknote,\n    description: \"Pay when your order is delivered\",\n    providers: []\n  }\n];\n\nexport function PaymentMethodSelector({ onSelect, selected }: PaymentMethodSelectorProps) {\n  const handleMethodSelect = (method: PaymentMethod) => {\n    onSelect(method);\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-sm text-gray-600 mb-4\">\n        Choose your preferred payment method\n      </div>\n\n      <div className=\"grid gap-4\">\n        {paymentMethods.map((method) => {\n          const Icon = method.icon;\n          const isSelected = selected?.id === method.id;\n          \n          return (\n            <Card\n              key={method.id}\n              className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                isSelected \n                  ? \"ring-2 ring-blue-500 bg-blue-50\" \n                  : \"hover:border-gray-400\"\n              }`}\n              onClick={() => handleMethodSelect(method)}\n            >\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className={`p-2 rounded-lg ${\n                      isSelected ? \"bg-blue-100\" : \"bg-gray-100\"\n                    }`}>\n                      <Icon className={`w-6 h-6 ${\n                        isSelected ? \"text-blue-600\" : \"text-gray-600\"\n                      }`} />\n                    </div>\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <h3 className={`font-semibold ${\n                          isSelected ? \"text-blue-900\" : \"text-gray-900\"\n                        }`}>\n                          {method.name}\n                        </h3>\n                        {method.isPopular && (\n                          <Badge variant=\"secondary\" className=\"text-xs bg-green-100 text-green-700\">\n                            Popular\n                          </Badge>\n                        )}\n                      </div>\n                      <p className={`text-sm ${\n                        isSelected ? \"text-blue-700\" : \"text-gray-600\"\n                      }`}>\n                        {method.description}\n                      </p>\n                      \n                      {method.providers && method.providers.length > 0 && (\n                        <div className=\"flex flex-wrap gap-1 mt-2\">\n                          {method.providers.slice(0, 4).map((provider, index) => (\n                            <span\n                              key={provider}\n                              className={`text-xs px-2 py-1 rounded ${\n                                isSelected \n                                  ? \"bg-blue-200 text-blue-800\" \n                                  : \"bg-gray-200 text-gray-700\"\n                              }`}\n                            >\n                              {provider}\n                            </span>\n                          ))}\n                          {method.providers.length > 4 && (\n                            <span className={`text-xs px-2 py-1 rounded ${\n                              isSelected \n                                ? \"bg-blue-200 text-blue-800\" \n                                : \"bg-gray-200 text-gray-700\"\n                            }`}>\n                              +{method.providers.length - 4} more\n                            </span>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {isSelected && (\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n                        <Check className=\"w-4 h-4 text-white\" />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Security Notice */}\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mt-6\">\n        <div className=\"flex items-start space-x-2\">\n          <div className=\"w-5 h-5 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n            <Check className=\"w-3 h-3 text-green-600\" />\n          </div>\n          <div>\n            <h4 className=\"text-sm font-medium text-green-900 mb-1\">\n              Secure Payment\n            </h4>\n            <p className=\"text-sm text-green-700\">\n              All payments are secured with 256-bit SSL encryption. Your payment information is never stored on our servers.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Accepted Cards */}\n      <div className=\"bg-gray-50 rounded-lg p-4\">\n        <h4 className=\"text-sm font-medium text-gray-900 mb-3\">We Accept</h4>\n        <div className=\"flex flex-wrap gap-3\">\n          {[\"Visa\", \"MasterCard\", \"American Express\", \"RuPay\", \"Google Pay\", \"PhonePe\", \"Paytm\"].map((brand) => (\n            <div\n              key={brand}\n              className=\"bg-white px-3 py-2 rounded border text-xs font-medium text-gray-700 shadow-sm\"\n            >\n              {brand}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/page/checkout/PaymentForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  CreditCard, \n  Calendar, \n  Lock, \n  User, \n  Building2,\n  Smartphone,\n  Wallet,\n  AlertCircle,\n  CheckCircle,\n  Loader2\n} from \"lucide-react\";\n\ninterface PaymentMethod {\n  id: string;\n  type: string;\n  name: string;\n  providers?: string[];\n}\n\ninterface PaymentFormProps {\n  paymentMethod: PaymentMethod;\n  onSubmit: (paymentData: any) => void;\n  isProcessing: boolean;\n  amount: number;\n}\n\nexport function PaymentForm({ paymentMethod, onSubmit, isProcessing, amount }: PaymentFormProps) {\n  const [formData, setFormData] = useState({\n    // Card details\n    cardNumber: \"\",\n    expiryMonth: \"\",\n    expiryYear: \"\",\n    cvv: \"\",\n    cardHolderName: \"\",\n    // UPI details\n    upiId: \"\",\n    // Net banking\n    bankName: \"\",\n    // Wallet details\n    walletProvider: \"\",\n    walletNumber: \"\",\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: \"\" }));\n    }\n  };\n\n  const validateCardForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.cardNumber.replace(/\\s/g, \"\")) {\n      newErrors.cardNumber = \"Card number is required\";\n    } else if (formData.cardNumber.replace(/\\s/g, \"\").length < 16) {\n      newErrors.cardNumber = \"Please enter a valid card number\";\n    }\n\n    if (!formData.expiryMonth) newErrors.expiryMonth = \"Month is required\";\n    if (!formData.expiryYear) newErrors.expiryYear = \"Year is required\";\n    if (!formData.cvv) newErrors.cvv = \"CVV is required\";\n    if (!formData.cardHolderName.trim()) newErrors.cardHolderName = \"Cardholder name is required\";\n\n    // Validate expiry date\n    if (formData.expiryMonth && formData.expiryYear) {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n      const currentMonth = currentDate.getMonth() + 1;\n      const expMonth = parseInt(formData.expiryMonth);\n      const expYear = parseInt(formData.expiryYear);\n\n      if (expYear < currentYear || (expYear === currentYear && expMonth < currentMonth)) {\n        newErrors.expiryMonth = \"Card has expired\";\n      }\n    }\n\n    return newErrors;\n  };\n\n  const validateUPIForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.upiId) {\n      newErrors.upiId = \"UPI ID is required\";\n    } else if (!/^[\\w\\.\\-_]{2,256}@[a-zA-Z]{2,64}$/.test(formData.upiId)) {\n      newErrors.upiId = \"Please enter a valid UPI ID\";\n    }\n\n    return newErrors;\n  };\n\n  const validateNetBankingForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.bankName) {\n      newErrors.bankName = \"Please select your bank\";\n    }\n\n    return newErrors;\n  };\n\n  const validateWalletForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.walletProvider) {\n      newErrors.walletProvider = \"Please select wallet provider\";\n    }\n\n    if (formData.walletProvider && !formData.walletNumber) {\n      newErrors.walletNumber = \"Wallet number/phone is required\";\n    }\n\n    return newErrors;\n  };\n\n  const validateForm = () => {\n    let newErrors: Record<string, string> = {};\n\n    switch (paymentMethod.type) {\n      case \"CREDIT_CARD\":\n      case \"DEBIT_CARD\":\n        newErrors = validateCardForm();\n        break;\n      case \"UPI\":\n        newErrors = validateUPIForm();\n        break;\n      case \"NET_BANKING\":\n        newErrors = validateNetBankingForm();\n        break;\n      case \"WALLET\":\n        newErrors = validateWalletForm();\n        break;\n      case \"CASH_ON_DELIVERY\":\n        // No validation needed for COD\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (paymentMethod.type === \"CASH_ON_DELIVERY\") {\n      // No validation needed for COD\n      onSubmit({ method: paymentMethod.type });\n      return;\n    }\n\n    if (validateForm()) {\n      onSubmit({ method: paymentMethod.type, ...formData });\n    }\n  };\n\n  const formatCardNumber = (value: string) => {\n    const v = value.replace(/\\s+/g, \"\").replace(/[^0-9]/gi, \"\");\n    const matches = v.match(/\\d{4,16}/g);\n    const match = (matches && matches[0]) || \"\";\n    const parts = [];\n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    if (parts.length) {\n      return parts.join(\" \");\n    } else {\n      return v;\n    }\n  };\n\n  const formatPrice = (priceInCents: number) => {\n    return `₹${(priceInCents / 100).toLocaleString('en-IN')}`;\n  };\n\n  // Render different forms based on payment method\n  const renderPaymentForm = () => {\n    switch (paymentMethod.type) {\n      case \"CREDIT_CARD\":\n      case \"DEBIT_CARD\":\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Card Number *\n              </label>\n              <div className=\"relative\">\n                <Input\n                  type=\"text\"\n                  value={formData.cardNumber}\n                  onChange={(e) => handleInputChange(\"cardNumber\", formatCardNumber(e.target.value))}\n                  placeholder=\"1234 5678 9012 3456\"\n                  maxLength={19}\n                  className={`pl-10 ${errors.cardNumber ? \"border-red-500\" : \"\"}`}\n                />\n                <CreditCard className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              {errors.cardNumber && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.cardNumber}</p>\n              )}\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Month *\n                </label>\n                <select\n                  value={formData.expiryMonth}\n                  onChange={(e) => handleInputChange(\"expiryMonth\", e.target.value)}\n                  className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.expiryMonth ? \"border-red-500\" : \"\"\n                  }`}\n                >\n                  <option value=\"\">MM</option>\n                  {Array.from({ length: 12 }, (_, i) => i + 1).map((month) => (\n                    <option key={month} value={month.toString().padStart(2, \"0\")}>\n                      {month.toString().padStart(2, \"0\")}\n                    </option>\n                  ))}\n                </select>\n                {errors.expiryMonth && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.expiryMonth}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Year *\n                </label>\n                <select\n                  value={formData.expiryYear}\n                  onChange={(e) => handleInputChange(\"expiryYear\", e.target.value)}\n                  className={`w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.expiryYear ? \"border-red-500\" : \"\"\n                  }`}\n                >\n                  <option value=\"\">YY</option>\n                  {Array.from({ length: 20 }, (_, i) => new Date().getFullYear() + i).map((year) => (\n                    <option key={year} value={year.toString().slice(-2)}>\n                      {year.toString().slice(-2)}\n                    </option>\n                  ))}\n                </select>\n                {errors.expiryYear && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.expiryYear}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  CVV *\n                </label>\n                <div className=\"relative\">\n                  <Input\n                    type=\"text\"\n                    value={formData.cvv}\n                    onChange={(e) => handleInputChange(\"cvv\", e.target.value.replace(/\\D/g, \"\"))}\n                    placeholder=\"123\"\n                    maxLength={4}\n                    className={`pl-10 ${errors.cvv ? \"border-red-500\" : \"\"}`}\n                  />\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                </div>\n                {errors.cvv && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.cvv}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Cardholder Name *\n              </label>\n              <div className=\"relative\">\n                <Input\n                  type=\"text\"\n                  value={formData.cardHolderName}\n                  onChange={(e) => handleInputChange(\"cardHolderName\", e.target.value.toUpperCase())}\n                  placeholder=\"JOHN DOE\"\n                  className={`pl-10 ${errors.cardHolderName ? \"border-red-500\" : \"\"}`}\n                />\n                <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              {errors.cardHolderName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.cardHolderName}</p>\n              )}\n            </div>\n          </div>\n        );\n\n      case \"UPI\":\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                UPI ID *\n              </label>\n              <div className=\"relative\">\n                <Input\n                  type=\"text\"\n                  value={formData.upiId}\n                  onChange={(e) => handleInputChange(\"upiId\", e.target.value.toLowerCase())}\n                  placeholder=\"yourname@paytm\"\n                  className={`pl-10 ${errors.upiId ? \"border-red-500\" : \"\"}`}\n                />\n                <Smartphone className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              {errors.upiId && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.upiId}</p>\n              )}\n            </div>\n\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <AlertCircle className=\"w-5 h-5 text-blue-600\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-blue-900\">UPI Payment</h4>\n                  <p className=\"text-sm text-blue-700\">\n                    You will be redirected to your UPI app to complete the payment.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"NET_BANKING\":\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Select Your Bank *\n              </label>\n              <div className=\"relative\">\n                <select\n                  value={formData.bankName}\n                  onChange={(e) => handleInputChange(\"bankName\", e.target.value)}\n                  className={`w-full pl-10 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                    errors.bankName ? \"border-red-500\" : \"\"\n                  }`}\n                >\n                  <option value=\"\">Choose your bank</option>\n                  <option value=\"sbi\">State Bank of India</option>\n                  <option value=\"hdfc\">HDFC Bank</option>\n                  <option value=\"icici\">ICICI Bank</option>\n                  <option value=\"axis\">Axis Bank</option>\n                  <option value=\"kotak\">Kotak Mahindra Bank</option>\n                  <option value=\"pnb\">Punjab National Bank</option>\n                  <option value=\"canara\">Canara Bank</option>\n                  <option value=\"bob\">Bank of Baroda</option>\n                  <option value=\"union\">Union Bank of India</option>\n                  <option value=\"yes\">Yes Bank</option>\n                </select>\n                <Building2 className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              {errors.bankName && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.bankName}</p>\n              )}\n            </div>\n\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-2\">\n                <AlertCircle className=\"w-5 h-5 text-yellow-600\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-yellow-900\">Net Banking</h4>\n                  <p className=\"text-sm text-yellow-700\">\n                    You will be redirected to your bank's website to complete the payment.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"WALLET\":\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Select Wallet Provider *\n              </label>\n              <div className=\"grid gap-3\">\n                {paymentMethod.providers?.map((provider) => (\n                  <label key={provider} className=\"flex items-center cursor-pointer\">\n                    <input\n                      type=\"radio\"\n                      name=\"walletProvider\"\n                      value={provider}\n                      checked={formData.walletProvider === provider}\n                      onChange={(e) => handleInputChange(\"walletProvider\", e.target.value)}\n                      className=\"mr-3\"\n                    />\n                    <span className=\"text-sm font-medium\">{provider}</span>\n                  </label>\n                ))}\n              </div>\n              {errors.walletProvider && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.walletProvider}</p>\n              )}\n            </div>\n\n            {formData.walletProvider && (\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Mobile Number *\n                </label>\n                <div className=\"relative\">\n                  <span className=\"absolute left-3 top-3 text-sm text-gray-500\">+91</span>\n                  <Input\n                    type=\"tel\"\n                    value={formData.walletNumber}\n                    onChange={(e) => handleInputChange(\"walletNumber\", e.target.value.replace(/\\D/g, \"\"))}\n                    placeholder=\"9876543210\"\n                    maxLength={10}\n                    className={`pl-12 ${errors.walletNumber ? \"border-red-500\" : \"\"}`}\n                  />\n                </div>\n                {errors.walletNumber && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.walletNumber}</p>\n                )}\n              </div>\n            )}\n          </div>\n        );\n\n      case \"CASH_ON_DELIVERY\":\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-6 text-center\">\n              <CheckCircle className=\"w-12 h-12 text-green-600 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold text-green-900 mb-2\">Cash on Delivery</h3>\n              <p className=\"text-sm text-green-700 mb-4\">\n                You can pay in cash when your order is delivered to your doorstep.\n              </p>\n              <div className=\"bg-white rounded-lg p-4 border border-green-200\">\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span className=\"text-gray-600\">Amount to pay on delivery:</span>\n                  <span className=\"font-bold text-green-600\">{formatPrice(amount)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-start space-x-2\">\n                <AlertCircle className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                <div>\n                  <h4 className=\"text-sm font-medium text-blue-900 mb-1\">Important Notes:</h4>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• Please keep the exact amount ready</li>\n                    <li>• Our delivery partner will carry a POS machine for card payments</li>\n                    <li>• COD orders may take 1-2 days longer to process</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {renderPaymentForm()}\n\n      <div className=\"border-t pt-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <span className=\"text-lg font-semibold\">Total Amount:</span>\n          <span className=\"text-2xl font-bold text-blue-600\">{formatPrice(amount)}</span>\n        </div>\n\n        <Button\n          type=\"submit\"\n          size=\"lg\"\n          className=\"w-full\"\n          disabled={isProcessing}\n        >\n          {isProcessing ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Processing Payment...\n            </>\n          ) : (\n            paymentMethod.type === \"CASH_ON_DELIVERY\" \n              ? \"Place Order\" \n              : `Pay ${formatPrice(amount)}`\n          )}\n        </Button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2070, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2099, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/components/page/checkout/BuyNowOrderSummary.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ShoppingCart, Tag, Truck, Receipt, Package } from \"lucide-react\";\nimport Image from \"next/image\";\n\ninterface Product {\n  id: string;\n  name: string;\n  images?: { url: string; altText: string }[];\n  brand?: { name: string };\n}\n\ninterface Variant {\n  id: string;\n  price: number;\n  attributes?: Record<string, any>;\n}\n\ninterface BuyNowOrderSummaryProps {\n  product: Product;\n  variant: Variant;\n  quantity: number;\n  subtotal: number;\n  shipping: number;\n  tax: number;\n  total: number;\n  formatPrice: (priceInCents: number) => string;\n}\n\nexport function BuyNowOrderSummary({ \n  product,\n  variant,\n  quantity,\n  subtotal,\n  shipping,\n  tax,\n  total,\n  formatPrice \n}: BuyNowOrderSummaryProps) {\n  \n  return (\n    <Card className=\"sticky top-24\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Package className=\"w-5 h-5\" />\n          Order Summary\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-6\">\n        {/* Product Item */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between text-sm text-gray-600\">\n            <span>Item</span>\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              Buy Now\n            </Badge>\n          </div>\n          \n          <div className=\"flex items-center space-x-3 py-2 border rounded-lg p-3 bg-gray-50\">\n            <div className=\"relative w-16 h-16 flex-shrink-0\">\n              <Image\n                src={product.images?.[0]?.url || \"/placeholder.svg\"}\n                alt={product.images?.[0]?.altText || product.name}\n                fill\n                className=\"object-cover rounded-md\"\n              />\n              <Badge \n                variant=\"secondary\" \n                className=\"absolute -top-2 -right-2 w-6 h-6 p-0 flex items-center justify-center text-xs bg-blue-500 text-white\"\n              >\n                {quantity}\n              </Badge>\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <h4 className=\"text-sm font-medium text-gray-900 line-clamp-2\">\n                {product.name}\n              </h4>\n              <div className=\"flex flex-wrap gap-1 mt-1\">\n                {product.brand && (\n                  <span className=\"text-xs text-gray-500\">\n                    {product.brand.name}\n                  </span>\n                )}\n                {variant.attributes && Object.entries(variant.attributes).map(([key, value]) => {\n                  if (key === 'comparePrice') return null;\n                  return (\n                    <span key={key} className=\"text-xs text-gray-500\">\n                      {value}\n                    </span>\n                  );\n                })}\n              </div>\n              <div className=\"mt-2\">\n                <span className=\"text-sm font-medium text-gray-900\">\n                  {formatPrice(variant.price)} × {quantity}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Separator />\n\n        {/* Price Breakdown */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">Item Total</span>\n            <span className=\"font-medium\">{formatPrice(subtotal)}</span>\n          </div>\n          \n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"flex items-center gap-1 text-gray-600\">\n              <Truck className=\"w-4 h-4\" />\n              Delivery\n            </span>\n            <span className=\"font-medium text-green-600\">\n              {shipping === 0 ? \"FREE\" : formatPrice(shipping)}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"flex items-center gap-1 text-gray-600\">\n              <Receipt className=\"w-4 h-4\" />\n              Tax (GST)\n            </span>\n            <span className=\"font-medium\">{formatPrice(tax)}</span>\n          </div>\n\n          {/* Savings if any */}\n          {variant.attributes?.comparePrice && variant.attributes.comparePrice > variant.price && (\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"flex items-center gap-1 text-green-600\">\n                <Tag className=\"w-4 h-4\" />\n                You Save\n              </span>\n              <span className=\"font-medium text-green-600\">\n                -{formatPrice((variant.attributes.comparePrice - variant.price) * quantity)}\n              </span>\n            </div>\n          )}\n\n          <Separator />\n          \n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-lg font-semibold\">Total Amount</span>\n            <span className=\"text-2xl font-bold text-blue-600\">\n              {formatPrice(total)}\n            </span>\n          </div>\n        </div>\n\n        {/* Express Checkout Benefits */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"text-sm space-y-2\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <span className=\"text-blue-900 font-medium\">Express checkout - Skip the cart</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <span className=\"text-blue-900 font-medium\">Faster processing</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <span className=\"text-blue-900 font-medium\">Secure payment</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Estimated Delivery */}\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Truck className=\"w-5 h-5 text-green-600\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-green-900\">\n                Express Delivery\n              </h4>\n              <p className=\"text-sm text-green-700\">\n                2-3 business days for Buy Now orders\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Product Guarantee */}\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n          <div className=\"text-sm space-y-2\">\n            <h4 className=\"font-medium text-gray-900\">Purchase Protection</h4>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-gray-500 rounded-full\"></div>\n              <span className=\"text-gray-700\">30-day return policy</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-gray-500 rounded-full\"></div>\n              <span className=\"text-gray-700\">Genuine product guarantee</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-2 h-2 bg-gray-500 rounded-full\"></div>\n              <span className=\"text-gray-700\">24/7 customer support</span>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2705, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/client/product/product.queries.ts"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_PRODUCT_CATEGORIES = gql`\n  query GetProductCategories {\n    categories {\n      id\n      name\n\n      children {\n        id\n        name\n        categorySpecification {\n          id\n          key\n          label\n          placeholder\n        }\n      }\n      categorySpecification {\n        id\n        key\n        label\n        placeholder\n      }\n    }\n  }\n`;\n\nexport const GET_PRODUCT = gql`\n  query GetProduct($productId: ID!) {\n    getProduct(productId: $productId) {\n      Category {\n        name\n        id\n        parent {\n          id\n          name\n        }\n      }\n      id\n      name\n      description\n      returnPolicy\n      warranty\n      images {\n        id\n        url\n        type\n        altText\n      }\n      variants {\n        price\n        sku\n        productId\n        stock\n        specifications {\n          key\n          value\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PRODUCT_BY_SLUG = gql`\n  query GetProductBySlug($slug: String!) {\n    getProductBySlug(slug: $slug) {\n      id\n      name\n      description\n      slug\n      status\n      # salePrice\n      # saleStart\n      # saleEnd\n      returnPolicy\n      warranty\n      category {\n        id\n        name\n        slug\n        parent {\n          id\n          name\n        }\n      }\n      brand {\n        id\n        name\n        slug\n      }\n      seller {\n        id\n        firstName\n        lastName\n      }\n      images {\n        id\n        url\n        altText\n        sortOrder\n        type\n      }\n      variants {\n        id\n        price\n        stock\n        isDefault\n        attributes\n      }\n      reviews {\n        id\n        rating\n        comment\n        createdAt\n        user {\n          firstName\n          lastName\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PRODUCTS = gql`\n  query GetProducts {\n    getProducts {\n      id\n      name\n      slug\n      images {\n        url\n        altText\n      }\n      status\n      variants {\n        id\n        price\n      }\n      reviews {\n        rating\n      }\n    }\n  }\n`;\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,yBAAyB,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAwB1C,CAAC;AAEM,MAAM,cAAc,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkC/B,CAAC;AAEM,MAAM,sBAAsB,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DvC,CAAC;AAEM,MAAM,eAAe,8IAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;AAoBhC,CAAC","debugId":null}},
    {"offset": {"line": 2857, "column": 0}, "map": {"version":3,"sources":["file:///home/mistakely/Desktop/projects/dai/buyer/app/%28main%29/buy-now/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams, useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowLeft, ShieldCheck, Truck, CreditCard } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { AddressForm } from \"@/components/page/checkout/AddressForm\";\nimport { PaymentMethodSelector } from \"@/components/page/checkout/PaymentMethodSelector\";\nimport { PaymentForm } from \"@/components/page/checkout/PaymentForm\";\nimport { BuyNowOrderSummary } from \"@/components/page/checkout/BuyNowOrderSummary\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PRODUCT_BY_SLUG } from \"@/client/product/product.queries\";\n\nexport default function BuyNowPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const productSlug = searchParams.get('product');\n  const quantity = parseInt(searchParams.get('quantity') || '1');\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [shippingAddress, setShippingAddress] = useState(null);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Get product data\n  const { data: productData, loading: productLoading, error: productError } = useQuery(\n    GET_PRODUCT_BY_SLUG, \n    {\n      variables: { slug: productSlug },\n      skip: !productSlug\n    }\n  );\n\n  const product = productData?.getProductBySlug;\n  const defaultVariant = product?.variants?.find((v: any) => v.isDefault) || product?.variants?.[0];\n\n  // Calculate totals\n  const itemPrice = defaultVariant ? defaultVariant.price * quantity : 0;\n  const subtotal = itemPrice;\n  const shipping = 0; // Free shipping\n  const tax = Math.round(subtotal * 0.18); // 18% tax\n  const total = subtotal + shipping + tax;\n\n  const steps = [\n    { id: 1, name: \"Shipping\", icon: Truck },\n    { id: 2, name: \"Payment\", icon: CreditCard },\n    { id: 3, name: \"Review\", icon: ShieldCheck },\n  ];\n\n  // Redirect if no product specified\n  useEffect(() => {\n    if (!productSlug && !productLoading) {\n      router.push('/');\n    }\n  }, [productSlug, productLoading, router]);\n\n  const handleAddressSubmit = (address: any) => {\n    setShippingAddress(address);\n    setCurrentStep(2);\n  };\n\n  const handlePaymentMethodSelect = (method: any) => {\n    setSelectedPaymentMethod(method);\n  };\n\n  const handlePaymentSubmit = async (paymentData: any) => {\n    setIsProcessing(true);\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    // Here you would normally process the payment with your payment provider\n    console.log(\"Processing Buy Now payment:\", { \n      paymentData, \n      selectedPaymentMethod,\n      product,\n      quantity,\n      shippingAddress,\n      total\n    });\n    \n    setCurrentStep(3);\n    setIsProcessing(false);\n  };\n\n  const formatPrice = (priceInCents: number) => {\n    return `₹${(priceInCents / 100).toLocaleString('en-IN')}`;\n  };\n\n  // Handle loading and error states\n  if (productLoading) {\n    return (\n      <div className=\"max-w-[1800px] mx-auto px-3 sm:px-4 md:px-6 lg:px-8 xl:px-12 2xl:px-16 py-8\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded mb-4\"></div>\n          <div className=\"h-96 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (productError || !product) {\n    return (\n      <div className=\"max-w-[1800px] mx-auto px-3 sm:px-4 md:px-6 lg:px-8 xl:px-12 2xl:px-16 py-8\">\n        <div className=\"text-center py-16\">\n          <h2 className=\"text-2xl font-bold mb-4\">Product Not Found</h2>\n          <p className=\"text-gray-600 mb-8\">The product you're trying to purchase was not found.</p>\n          <Link href=\"/\">\n            <Button>Continue Shopping</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-[1800px] mx-auto px-3 sm:px-4 md:px-6 lg:px-8 xl:px-12 2xl:px-16 py-4 sm:py-6 lg:py-8\">\n      {/* Header */}\n      <div className=\"flex items-center gap-4 mb-8\">\n        <Button \n          variant=\"ghost\" \n          size=\"sm\"\n          onClick={() => router.back()}\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Back to Product\n        </Button>\n        <h1 className=\"text-2xl sm:text-3xl font-bold\">Buy Now Checkout</h1>\n        <Badge variant=\"outline\" className=\"ml-auto\">\n          Express Checkout\n        </Badge>\n      </div>\n\n      {/* Progress Steps */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-center space-x-8\">\n          {steps.map((step, index) => {\n            const Icon = step.icon;\n            const isActive = currentStep === step.id;\n            const isCompleted = currentStep > step.id;\n            \n            return (\n              <div key={step.id} className=\"flex items-center\">\n                <div className={`flex items-center justify-center w-10 h-10 rounded-full border-2 ${\n                  isCompleted \n                    ? \"bg-green-500 border-green-500 text-white\" \n                    : isActive \n                    ? \"border-blue-500 text-blue-500\" \n                    : \"border-gray-300 text-gray-400\"\n                }`}>\n                  <Icon className=\"w-5 h-5\" />\n                </div>\n                <span className={`ml-2 text-sm font-medium ${\n                  isActive ? \"text-blue-500\" : isCompleted ? \"text-green-500\" : \"text-gray-400\"\n                }`}>\n                  {step.name}\n                </span>\n                {index < steps.length - 1 && (\n                  <div className={`w-16 h-0.5 ml-4 ${\n                    isCompleted ? \"bg-green-500\" : \"bg-gray-300\"\n                  }`} />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2\">\n          {currentStep === 1 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Truck className=\"w-5 h-5\" />\n                  Shipping Address\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <AddressForm onSubmit={handleAddressSubmit} />\n              </CardContent>\n            </Card>\n          )}\n\n          {currentStep === 2 && (\n            <div className=\"space-y-6\">\n              {/* Shipping Address Summary */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span className=\"flex items-center gap-2\">\n                      <Truck className=\"w-5 h-5\" />\n                      Delivery Address\n                    </span>\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={() => setCurrentStep(1)}\n                    >\n                      Change\n                    </Button>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {shippingAddress && (\n                    <div className=\"text-sm space-y-1\">\n                      <p className=\"font-medium\">{shippingAddress.fullName}</p>\n                      <p>{shippingAddress.streetAddress}</p>\n                      <p>{shippingAddress.city}, {shippingAddress.state} {shippingAddress.zipCode}</p>\n                      <p>{shippingAddress.country}</p>\n                      <p className=\"text-gray-600\">Phone: {shippingAddress.phone}</p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              {/* Payment Method Selection */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <CreditCard className=\"w-5 h-5\" />\n                    Payment Method\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <PaymentMethodSelector \n                    onSelect={handlePaymentMethodSelect}\n                    selected={selectedPaymentMethod}\n                  />\n                </CardContent>\n              </Card>\n\n              {/* Payment Form */}\n              {selectedPaymentMethod && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Payment Details</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <PaymentForm\n                      paymentMethod={selectedPaymentMethod}\n                      onSubmit={handlePaymentSubmit}\n                      isProcessing={isProcessing}\n                      amount={total}\n                    />\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n          )}\n\n          {currentStep === 3 && (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  <ShieldCheck className=\"w-10 h-10 text-green-600\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-4 text-green-600\">Order Placed Successfully!</h2>\n                <p className=\"text-gray-600 mb-6\">\n                  Thank you for your purchase. You will receive a confirmation email shortly.\n                </p>\n                <div className=\"space-y-2 text-sm text-gray-500\">\n                  <p>Order ID: #ORD-{Date.now()}</p>\n                  <p>Estimated delivery: 3-5 business days</p>\n                </div>\n                <div className=\"flex gap-4 justify-center mt-8\">\n                  <Link href=\"/\">\n                    <Button variant=\"outline\">Continue Shopping</Button>\n                  </Link>\n                  <Button>Track Order</Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        {/* Order Summary Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <BuyNowOrderSummary \n            product={product}\n            variant={defaultVariant}\n            quantity={quantity}\n            subtotal={subtotal}\n            shipping={shipping}\n            tax={tax}\n            total={total}\n            formatPrice={formatPrice}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}